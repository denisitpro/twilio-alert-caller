# Use a specific version of Python
ARG PYTHON_IMAGE_VERSION="3.12.6"
FROM python:${PYTHON_IMAGE_VERSION}

# Disable bytecode generation and buffer
ENV PYTHONDONTWRITEBYTECODE=1
ENV PYTHONUNBUFFERED=1

# Set working directory
WORKDIR /app

# Copy requirements.txt to the container and install dependencies
COPY requirements.txt /app/
RUN pip install --no-cache-dir -r requirements.txt

# Copy the application code
COPY caller-twilio.py /app/caller-twilio.py

# Set build arguments
ARG TIMESTAMP
ARG VERSION
ARG GIT_COMMIT_HASH

# Store build metadata in version.txt
RUN echo "version: ${VERSION}" > version.txt && \
    echo "timestamp: ${TIMESTAMP}" >> version.txt && \
    echo "commitHash: ${GIT_COMMIT_HASH}" >> version.txt

# Add labels to the image
LABEL timestamp="${TIMESTAMP}"
LABEL version="${VERSION}"
LABEL commitHash="${GIT_COMMIT_HASH}"

# Set environment variable for Flask app
ENV FLASK_APP=caller-twilio.py

# Set default port for the app
ENV TWILIO_PORT=5000
ENV TWILIO_BIND_ADDRESS=0.0.0.0

# Expose the port (default Flask port is 5000)
EXPOSE 5000

# Use Gunicorn as the WSGI server in production mode, and bind it to the PORT environment variable
#CMD ["gunicorn", "--bind", "${TWILIO_BIND_ADDRESS}:${TWILIO_PORT}", "caller-twilio:app"]
CMD ["sh", "-c", "gunicorn --bind ${TWILIO_BIND_ADDRESS}:${TWILIO_PORT} caller-twilio:app"]